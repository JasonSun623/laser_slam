#!/usr/bin/env python
PACKAGE = "pointcloud_segmentation"
import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("camera_rows_param",    int_t,    0, "An Integer parameter", 480,320,640)
gen.add("camera_cols_param",    int_t,    0, "An Integer parameter", 640,480,1080)
gen.add("camera_sampling_rate_param",    int_t,    0, "An Integer parameter", 16,1,16)
gen.add("camera_point_x_param", double_t, 0, "A double parameter",    .0,-6.0,6.0)
gen.add("camera_point_y_param", double_t, 0, "A double parameter",    .0,-6.0,6.0)
gen.add("camera_point_z_param", double_t, 0, "A double parameter",    .81, .0, 2.0)
gen.add("camera_pitch_param", double_t, 0, "A double parameter",   16.8,-180.0,180.0)
gen.add("camera_roll_param", double_t, 0, "A double parameter",    .0,-180.0,180.0)
gen.add("camera_view_angle_param", double_t, 0, "A double parameter",    36.5, 0.0,   180.0)
gen.add("obstacle_height_threshold_param", double_t, 0, "A double parameter",   .025, -1.0,1.0)
gen.add("slope_threshold_param", double_t, 0, "A double parameter",    15.0,-180.0,180.0)
gen.add("dist_threshold_param", double_t, 0, "A double parameter",    0.05,-1.0,1.0)
gen.add("max_x_param", double_t, 0, "A double parameter",    6,0.0,10.0)


#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "pointcloud_segmentation", "pcs"))
